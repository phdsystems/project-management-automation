name: Test Suite (Maximum Parallelization)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  # Run each individual test file in parallel
  test-unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-file:
          - test-gh-auth
          - test-gh-api-teams
          - test-gh-api-users
          - test-gh-repo
          - test-jq-parsing
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup test environment
        run: |
          chmod +x tests/test-helpers.sh
          chmod +x tests/mocks/*
          chmod +x tests/unit/*.sh

      - name: Run ${{ matrix.test-file }}
        run: |
          ./tests/unit/${{ matrix.test-file }}.sh
        env:
          TEST_ACCOUNT_TYPE: Organization
          VERBOSE: 1

      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs-${{ matrix.test-file }}
          path: /tmp/gh-automation-tests-*/
          retention-days: 7

  test-integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-file:
          - test-makefile-prereqs
          - test-makefile-dry-run
          - test-makefile-teams
          - test-makefile-repos
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup test environment
        run: |
          chmod +x tests/test-helpers.sh
          chmod +x tests/mocks/*
          chmod +x tests/integration/*.sh

      - name: Run ${{ matrix.test-file }}
        run: |
          ./tests/integration/${{ matrix.test-file }}.sh
        env:
          TEST_ACCOUNT_TYPE: Organization
          VERBOSE: 1

      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs-${{ matrix.test-file }}
          path: /tmp/gh-automation-tests-*/
          retention-days: 7

  test-e2e:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-file:
          - test-full-workflow
          - test-error-scenarios
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup test environment
        run: |
          chmod +x tests/test-helpers.sh
          chmod +x tests/mocks/*
          chmod +x tests/e2e/*.sh

      - name: Run ${{ matrix.test-file }}
        run: |
          ./tests/e2e/${{ matrix.test-file }}.sh
        env:
          TEST_ACCOUNT_TYPE: Organization
          VERBOSE: 1

      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs-${{ matrix.test-file }}
          path: /tmp/gh-automation-tests-*/
          retention-days: 7

  # Summary job that requires all tests to pass
  test-summary:
    runs-on: ubuntu-latest
    needs: [test-unit, test-integration, test-e2e]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "All test jobs completed"

          # This job will fail if any test job failed
          if [ "${{ needs.test-unit.result }}" != "success" ] || \
             [ "${{ needs.test-integration.result }}" != "success" ] || \
             [ "${{ needs.test-e2e.result }}" != "success" ]; then
            echo "❌ Some tests failed"
            exit 1
          fi

          echo "✅ All tests passed"

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Lint shell scripts
        run: |
          find tests -name "*.sh" -type f -exec shellcheck -x {} +
          find tests/mocks -type f -exec shellcheck {} +

      - name: Validate JSON fixtures
        run: |
          for file in tests/fixtures/*.json; do
            echo "Validating $file"
            jq empty "$file" || exit 1
          done
