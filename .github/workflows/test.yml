name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-type: [unit, integration, e2e]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup dependencies
        run: |
          # jq is pre-installed on GitHub runners
          jq --version

          # Verify make is available
          make --version

      - name: Setup test environment
        run: |
          # Make test scripts executable
          chmod +x src/test/run-tests.sh
          chmod +x src/test/test-helpers.sh
          chmod +x src/test/mocks/*
          chmod +x src/test/unit/*.sh
          chmod +x src/test/integration/*.sh
          chmod +x src/test/e2e/*.sh

      - name: Run ${{ matrix.test-type }} tests
        run: |
          ./src/test/run-tests.sh ${{ matrix.test-type }}
        env:
          TEST_ACCOUNT_TYPE: Organization
          VERBOSE: 1

      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs-${{ matrix.test-type }}
          path: /tmp/gh-automation-tests-*/
          retention-days: 7

  test-all:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup dependencies
        run: |
          jq --version
          make --version

      - name: Setup test environment
        run: |
          chmod +x src/test/run-tests.sh
          chmod +x src/test/test-helpers.sh
          chmod +x src/test/mocks/*
          chmod +x src/test/unit/*.sh
          chmod +x src/test/integration/*.sh
          chmod +x src/test/e2e/*.sh

      - name: Run all tests
        run: |
          ./src/test/run-tests.sh all
        env:
          TEST_ACCOUNT_TYPE: Organization
          VERBOSE: 1

      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs-all
          path: /tmp/gh-automation-tests-*/
          retention-days: 7

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Lint shell scripts
        run: |
          # Lint test scripts
          find src/test -name "*.sh" -type f -exec shellcheck -x {} +

          # Lint mock scripts
          find src/test/mocks -type f -exec shellcheck {} +

      - name: Validate JSON fixtures
        run: |
          # Validate all JSON files
          for file in src/test/fixtures/*.json; do
            echo "Validating $file"
            jq empty "$file" || exit 1
          done

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security checks
        run: |
          # Check for hardcoded secrets
          ! grep -r "ghp_[a-zA-Z0-9]\{36\}" src/test/ || {
            echo "ERROR: Found hardcoded GitHub token"
            exit 1
          }

          # Check for AWS credentials
          ! grep -r "AKIA[A-Z0-9]\{16\}" src/test/ || {
            echo "ERROR: Found hardcoded AWS credentials"
            exit 1
          }

      - name: Check file permissions
        run: |
          # Ensure no overly permissive files
          find src/test -type f -perm /111 | while read file; do
            if [[ "$file" != *.sh ]] && [[ ! -x "$file" ]]; then
              echo "WARNING: Unexpected executable: $file"
            fi
          done
